{"version":3,"file":"static/js/756.25fda329.chunk.js","mappings":"qRAGaA,EAAgBC,EAAAA,GAAAA,GAAH,0FAMbC,EAAaD,EAAAA,GAAAA,IAAH,4F,SC4BvB,EAjCe,SAAC,GAAmB,IAAlBE,EAAiB,EAAjBA,QAASC,EAAQ,EAARA,KACtB,OAEI,SAACF,EAAD,WAGe,IAAZC,GACC,SAACE,EAAA,EAAD,IAEFD,EAAKE,KAAKC,OAAO,EAAGH,EAAKE,KAAKE,KAAI,SAAAC,GAChC,OACE,UAACT,EAAD,WAEGS,EAAMC,cACL,gBACEC,IAAKF,EAAMG,cACXC,IAAG,yCAAoCJ,EAAMC,cAC7CI,MAAO,OAGT,uBAAG,4BAEL,wBAAKL,EAAMM,QACX,yBAAG,cAAYN,EAAMO,eAZHP,EAAMQ,GAe7B,KAAI,wBAAI,6DAMlB,ECJD,EA1Ba,WACX,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOhB,EAAP,KAAaiB,EAAb,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOjB,EAAP,KAAgBmB,EAAhB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,8GAEOC,EAAAA,EAAAA,IAAeP,GAFtB,OAEXQ,EAFW,OAGjBL,EAAQK,GAHS,gDAKjBC,QAAQC,IAAI,QAAZ,MALiB,yBAOjBN,GAAW,GAPM,4EAAH,qDAUlBE,GACD,GAAE,CAACN,IAEJS,QAAQC,IAAI,eAAgBxB,IAE1B,SAAC,EAAD,CAAUD,QAASA,EAASC,KAAMA,GAIrC,C,8JC/BKyB,EAAU,+BACVC,EAAU,mCAET,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCd,GAAjC,kFACGe,EADH,iBACqBf,GADrB,kBAGkBgB,MAAM,GAAD,OACnBJ,GADmB,OACRG,EADQ,mCACwBF,IAJ/C,cAGK1B,EAHL,gBAMmBA,EAAK8B,OANxB,cAMKC,EANL,yBAOMA,GAPN,8HAaE,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,kFACCL,EADD,8BACgCK,GACrCV,QAAQC,IAAI,cAAcS,GAFrB,kBAIgBJ,MAAM,aAAD,OAEpBJ,GAFoB,OAETG,EAFS,uFAJrB,cAIG5B,EAJH,gBAQiBA,EAAK8B,OARtB,cAQGC,EARH,yBASIA,GATJ,8HAcA,SAAeV,EAAtB,+CAAO,OAAP,oBAAO,WAA8BR,GAA9B,kFACCe,EADD,iBACmBf,GADnB,kBAGgBgB,MAAM,GAAD,OAEnBJ,GAFmB,OAERG,EAFQ,2CAEgCF,IALrD,cAGG1B,EAHH,gBAOiBA,EAAK8B,OAPtB,cAOGC,EAPH,yBAQIA,GARJ,8HAeA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAiCrB,GAAjC,kFACCe,EADD,iBACmBf,GADnB,kBAGgBgB,MAAM,GAAD,OACnBJ,GADmB,OACRG,EADQ,2CACgCF,IAJrD,cAGG1B,EAHH,gBAMiBA,EAAK8B,OANtB,cAMGC,EANH,yBAOIA,GAPJ,8H,sBC7CT,SAASI,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,CAEe,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,EACnE,CAEAjB,OAAMkB,EACR,GACF,CACF,C","sources":["pages/Cast/Cast.styled.jsx","components/CastList/CastList.jsx","pages/Cast/Cast.jsx","servicesAPI/APImovies.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\n\r\nexport const ContainerCast = styled.li`\r\nmax-width: 200px;\r\nbackground-color: #e6f9f9;\r\nlist-style: none;\r\n`\r\n\r\nexport const ContainerC = styled.div`\r\ndisplay: flex;\r\nmax-width: 1300px;\r\ngap: 10px;\r\nflex-wrap: wrap;\r\n\r\n`","import Loader from \"components/Loader/Loader\";\r\nimport { ContainerC, ContainerCast } from \"pages/Cast/Cast.styled\";\r\n\r\n\r\nconst CastList=({loading, data})=>{\r\n    return(\r\n\r\n        <ContainerC>\r\n          \r\n    \r\n          {loading === true ? (\r\n            <Loader/>\r\n          ) : (\r\n          data.cast.length>0?(data.cast.map(actor => {\r\n            return (\r\n              <ContainerCast key={actor.id}>\r\n                \r\n                {actor.profile_path ? (\r\n                  <img\r\n                    alt={actor.original_name}\r\n                    src={`https://image.tmdb.org/t/p/w500${actor.profile_path}`}\r\n                    width={200}\r\n                  />\r\n                ) : (\r\n                  <p> Sorry, no image found</p>\r\n                )}\r\n                <h3>{actor.name}</h3>\r\n                <p>Character: {actor.character}</p>\r\n              </ContainerCast>\r\n            );\r\n          })):(<h2>We donÂ´t have any Cast information about this movie.</h2>)\r\n            \r\n          )}\r\n        </ContainerC>\r\n    )\r\n    \r\n}\r\nexport default CastList;","import { useState, useEffect } from 'react';\r\nimport { fetchMovieCast } from 'servicesAPI/APImovies';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport CastList from 'components/CastList/CastList';\r\n\r\nconst Cast = () => {\r\n  const { movieId } = useParams();\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const getMovieCast = async () => {\r\n      try {\r\n        const movieCast = await fetchMovieCast(movieId);\r\n        setData(movieCast);\r\n      } catch (error) {\r\n        console.log('error', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    getMovieCast();\r\n  }, [movieId]);\r\n\r\n  console.log('data en CAST', data);\r\n  return (\r\n    <CastList loading={loading} data={data}/>\r\n    \r\n    \r\n  );\r\n};\r\nexport default Cast;\r\n","const BASE_URL =\"https://api.themoviedb.org/3\"\r\nconst API_KEY = \"efe14000365490baeb4948d255370e47\"\r\n/* 'https://api.themoviedb.org/3/movie/11?api_key=' */\r\nexport async function fetchMovieDetails(id) {\r\n    const query = `/movie/${id}`;\r\n    try {\r\n      const data = await fetch(\r\n        `${BASE_URL}${query}?language=en-US&api_key=${API_KEY}`\r\n      );\r\n      const datas = await data.json()\r\n      return datas\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  export async function fetchSearchMovie(SearchInput) {\r\n    const query = `/search/movie?query=${SearchInput}`;\r\n    console.log(\"searchInput\",SearchInput)\r\n    try {\r\n      const data = await fetch(\r\n        `\r\n        ${BASE_URL}${query}&include_adult=true&language=en-US&page=1&api_key=efe14000365490baeb4948d255370e47`\r\n      );\r\n      const datas = await data.json()\r\n      return datas\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n  export async function fetchMovieCast(id) {\r\n    const query = `/movie/${id}`;\r\n    try {\r\n      const data = await fetch(\r\n        \r\n        `${BASE_URL}${query}/credits?language=en-US&api_key=${API_KEY}`\r\n      );\r\n      const datas = await data.json()\r\n      return datas\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n    \r\n  }\r\n\r\n  export async function fetchMovieReviews(id) {\r\n    const query = `/movie/${id}`;\r\n    try {\r\n      const data = await fetch(\r\n        `${BASE_URL}${query}/reviews?language=en-US&api_key=${API_KEY}`\r\n      )\r\n      const datas = await data.json();\r\n      return datas\r\n    } catch (error) { throw error;\r\n      \r\n    }\r\n  }","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["ContainerCast","styled","ContainerC","loading","data","Loader","cast","length","map","actor","profile_path","alt","original_name","src","width","name","character","id","movieId","useParams","useState","setData","setLoading","useEffect","getMovieCast","fetchMovieCast","movieCast","console","log","BASE_URL","API_KEY","fetchMovieDetails","query","fetch","json","datas","fetchSearchMovie","SearchInput","fetchMovieReviews","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}